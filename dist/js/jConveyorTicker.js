(()=>{"use strict";var __webpack_modules__={"./src/js/jConveyorTicker.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * jQuery Conveyor Ticker (jConveyorTicker)\n * Description: jQuery plugin to create simple horizontal conveyor belt animated tickers.\n *\n * Copyright (c) 2017 Luis Luz - UXD Lda\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * Project home:\n *   https://github.com/lluz/jquery-conveyor-ticker\n *\n * Version:  1.1.0\n *\n */\n\n(function($, window, document, undefined) {\n\n    $.fn.jConveyorTicker = function(options) {\n        if ( this === undefined || this.length === 0 ) {\n            console.log('jquery.jConveyorTicker() INITIALIZATION ERROR: You need to select one or more elements. See documentation form more information.');\n            return false;\n        }\n\n        var settings = {\n            anim_duration: 200,\n            reverse_elm: false,\n            force_loop: false,\n            start_paused: false,\n        };\n        var cycle_duration = settings.anim_duration;\n        var reverse_commute = settings.reverse_elm;\n        var initialization_forced = settings.force_loop;\n        var paused_oninit = settings.start_paused;\n        \n        if (options) {\n            if ( options.anim_duration !== undefined ) {\n                cycle_duration = options.anim_duration;\n            }\n\n            if ( options.reverse_elm !== undefined ) {\n                reverse_commute = options.reverse_elm;\n            }\n\n            if ( options.force_loop !== undefined ) {\n                initialization_forced = options.force_loop;\n            }\n\n            if ( options.start_paused !== undefined ) {\n                paused_oninit = options.start_paused;\n            }\n\n            $.extend(settings, options);\n        }\n\n        var $self = $(this);\n        var $list = $self.children('ul');\n\n        var output = {\n\n            'init': function(){\n\n                $self.each(function(){\n\n                    output.destroy();\n\n                    $list\n                    .css({\n                        'margin': '0',\n                        'padding': '0',\n                        'list-style': 'none'\n                    })\n                    .children('li')\n                    .css({\n                        'display': 'inline-block'\n                    });\n        \n                    var $listRawWidth = $list.width();\n                    var $parentWidth = $list.parent().width();\n                    var $parent1stThreshold = ($parentWidth / 2) - 20;\n        \n                    $list\n                    .removeAttr('style')\n                    .children('li')\n                    .removeAttr('style');\n        \n                    $self.addClass('jctkr-wrapper');\n        \n                    var conveyorInit = function(){\n                        var $listItems1stClone = $list.clone().children('li');\n                        $listItems1stClone.each(function(){\n                            $(this).addClass('clone');\n                        });\n                        $list.append($listItems1stClone);\n        \n                        var listTotalWidth = 0;\n                        $list.children().each(function(){\n                            listTotalWidth += $(this).outerWidth();\n                        });\n                        $list.width(listTotalWidth);\n        \n                        $self.hover(function(){\n                            output.pauseAnim();\n                        }, function(){\n                            output.pauseAnim();\n                            output.conveyorAnimate('normal');\n                        });\n        \n                        if ( reverse_commute ){\n                            $self.prev('.jctkr-label')\n                            .hover(function(){\n                                output.pauseAnim();\n                                output.conveyorAnimate('reverse');\n                            }, function(){\n                                output.pauseAnim();\n                                output.conveyorAnimate('normal');\n                            }).click(function(){\n                                return false;\n                            });\n                        }\n                        output.conveyorAnimate('normal');\n                    };\n        \n                    if ( $listRawWidth >= $parent1stThreshold ){\n                        conveyorInit();\n                    }\n                    else if ( initialization_forced ){\n                        var $itemsWidth, $containerWidth = 0;\n                        var itemsReplicate = function(){\n                            var $listItems1stClone = $list.clone().children('li');\n                            $listItems1stClone.each(function(){\n                                $(this).addClass('clone');\n                            });\n                            $list.append($listItems1stClone);\n        \n                            $itemsWidth = $list.width();\n                            $containerWidth = $list.parent().width();\n        \n                            if ( $itemsWidth < $containerWidth ){\n                                itemsReplicate();\n                            }\n                            else {\n                                conveyorInit();\n                                return false;\n                            }\n                        };\n        \n                        itemsReplicate();\n        \n                        while ( $itemsWidth < $containerWidth ) {\n                            if ( $itemsWidth >= $parent1stThreshold ) {\n                                conveyorInit();\n                                break;\n                            }\n                            itemsReplicate();\n                        }\n                    }\n\n                    $self.addClass('jctkr-initialized');\n\n                });\n\n                if ( paused_oninit ){\n                    output.pauseAnim();\n                }\n\n            },\n\n            'destroy': function(){\n\n                $self.each(function(){\n\n                    output.pauseAnim();\n\n                    $(this)\n                    .unbind().removeData()\n                    .removeClass('jctkr-wrapper jctkr-initialized');\n\n                    $list\n                    .unbind().removeData()\n                    .removeAttr('style')\n                    .find('.clone').remove();\n\n                });\n\n            },\n\n            'conveyorAnimate': function(action){\n\n                var tw = $list.width();\n                var tp = $list.position().left;\n                var operator = '-';\n                var direction = 'normal';\n                var tcal;\n\n                if (action !== undefined && action === 'reverse'){\n                    tcal = (tw / 2);\n                    if (tp > 0){\n                        $list.css('left', '-' + tcal + 'px');\n                        output.conveyorAnimate('reverse');\n                        return;\n                    }\n                    operator = '+';\n                    direction = 'reverse';\n                }\n                else {\n                    tcal = -1 * (tw / 2);\n                    if (tp < tcal){\n                        var toffs = -1 * (tcal - tp);\n                        $list.css('left', toffs + 'px');\n                        output.conveyorAnimate(direction);\n                        return;\n                    }\n                }\n\n                $list.stop().animate({\n                    left: operator + '=10px'\n                }, cycle_duration, 'linear', function(){\n                    output.conveyorAnimate(direction);\n                });\n\n            },\n\n            'pauseAnim': function(){\n                $list.stop();\n            },\n\n            'playAnim': function(){\n                output.conveyorAnimate('normal');\n            },\n\n        };\n\n        output.init();\n        return output;\n\n    };\n\n})(jQuery, window, document);\n\n//# sourceURL=webpack://gulp2022/./src/js/jConveyorTicker.js?")}},__webpack_require__={r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}},__webpack_exports__={};__webpack_modules__["./src/js/jConveyorTicker.js"](0,__webpack_exports__,__webpack_require__)})();